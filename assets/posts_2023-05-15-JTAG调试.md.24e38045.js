import{_ as s,o as n,c as a,U as e}from"./chunks/framework.70292381.js";const l="/assets/2023-05-15_09-31.629a6029.png",o="/assets/2023-05-15_09-44.c14bff63.png",p="/assets/2023-05-15_09-56.cfaee475.png",c="/assets/2023-05-15_14-30.a6d459d6.png",_=JSON.parse('{"title":"JTAG 调试","description":"","frontmatter":{"title":"JTAG 调试","date":"2023-05-15T00:00:00.000Z","categories":["openocd","gdb"],"tags":["jtag","esp32c3"]},"headers":[],"relativePath":"posts/2023-05-15-JTAG调试.md","filePath":"posts/2023-05-15-JTAG调试.md"}'),t={name:"posts/2023-05-15-JTAG调试.md"},i=e('<h1 id="jtag-调试" tabindex="-1">JTAG 调试 <a class="header-anchor" href="#jtag-调试" aria-label="Permalink to &quot;JTAG 调试&quot;">​</a></h1><p><img src="'+l+`" alt="1"></p><ol><li><p>启动idf环境 <code>. $HOME/esp/esp-idf/export.sh</code></p></li><li><p>启动openocd <code>openocd -f board/esp32c3-builtin.cfg</code></p><p>openocd 安装路径 <code>～/.espressif/tools/openocd-esp32/</code></p><p>脚本的目录 <code>～/.espressif/tools/openocd-esp32/v0.11.0-esp32-20221026/openocd-esp32/share/openocd/scripts/</code></p></li><li><p>编写 <code>DGB</code> 配饰参数，新建 <code>gdbinit</code> 文件 写入下列内容</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">target remote :3333</span></span>
<span class="line"><span style="color:#A6ACCD;">set remote hardware-watchpoint-limit 2</span></span>
<span class="line"><span style="color:#A6ACCD;">mon reset halt</span></span>
<span class="line"><span style="color:#A6ACCD;">flushregs</span></span>
<span class="line"><span style="color:#A6ACCD;">thb app_main</span></span>
<span class="line"><span style="color:#A6ACCD;">c</span></span></code></pre></div><ul><li><code>set remote hardware-watchpoint-limit 2</code> — 限制 GDB 仅使用 ESP32-C3 支持的两个硬件观察点。更多详细信息，请查阅 <a href="https://sourceware.org/gdb/onlinedocs/gdb/Remote-Configuration.html" target="_blank" rel="noreferrer">GDB 配置远程目标</a> 。</li><li><code>mon reset halt</code> — 复位芯片并使 CPU 停止运行。</li><li><code>flushregs</code> — monitor (<code>mon</code>) 命令无法通知 GDB 目标状态已经更改，GDB 会假设在 <code>mon reset halt</code> 之前所有的任务堆栈仍然有效。实际上，复位后目标状态将发生变化。执行 <code>flushregs</code> 是一种强制 GDB 从目标获取最新状态的方法。</li><li><code>thb app_main</code> — 在 <code>app_main</code> 处插入一个临时的硬件断点，如果有需要，可以将其替换为其他函数名。</li><li><code>c</code> — 恢复程序运行，它将会在 <code>app_main</code> 的断点处停止运行。</li></ul></li><li><p>进入项目路径， 启动 <code>DGB</code>： <code>riscv32-esp-elf-gdb -x gdbinit build/hello_world.elf</code></p><p>GDB的安装路径： <code>～/.espressif/tools/riscv32-esp-elf-gdb/</code></p></li></ol><h3 id="参数介绍" tabindex="-1">参数介绍 <a class="header-anchor" href="#参数介绍" aria-label="Permalink to &quot;参数介绍&quot;">​</a></h3><ol><li><p><code>c</code> 运行</p></li><li><p><code>l</code> 查看停止的位置的代码</p><p><img src="`+o+'" alt="1"></p></li><li><p>停止运行 <code>Ctrl + c</code></p></li><li><p>退出 <code>q</code></p></li><li><p>创建断点 <code>b</code></p><ol><li>在当前停止的文件上添加断点直接加行号<code>b 8</code></li><li>给方法名添加断点加方法名: <code>b app_main</code></li><li>在其他文件上加断点 文件名:行号 <code>b /home/MrTan/project/esp32c3/hello_world/main/blink/blink.c:20</code></li><li>临时断点 <code>tb</code> (只执行一次，执行过后自动删除)</li><li>查看断点信息 <code>info b</code> 编号 / 类型 / 断点是否保持(临时/永久) / 是否有效 / 内存地址 / 描述 <img src="'+p+`" alt="1"></li><li>断点生效/失效 <code>enable</code> <code>disable</code> + 编号： <code>enable 4</code></li><li>删除断点 <code>delete</code> + 编号: <code>delete 4</code>, 不加编号删除所有断点</li></ol></li><li><p>观察断点 <code>watch</code> ,观察的数据<strong>变化</strong>的时候会停止。</p><ol><li>观察变量，直接加变量名: <code>watch i</code></li><li>观察表达式: <code>watch i+j</code></li></ol></li><li><p>打印 <code>print</code></p><ol><li><p>打印变量 i： <code>print i</code></p></li><li><p>格式化打印 打印16进制的i: <code>print \\x i</code></p><p>x: 16进制 | d：10进制 | u：无符号10进制 | o：8进制 | t：2进制 | a： 地址 | c： 字符 | f ：浮点数 | s：字符串</p></li><li><p>打印函数square_func中变量n的值: <code>print square_func::n </code></p></li><li><p>打印文件中变量的值 <code>print &#39;/home/MrTan/project/esp32c3/hello_world/main/gdb/test.c&#39; :: i</code></p></li><li><p>设置变量的值 <code>print i=6</code></p></li></ol></li><li><p>显示 <code>display</code>，不主动停止运行代码， 断点停止的时候显示多个变量</p><ol><li><p>显示不同格式的变量 参考 <code>print</code>： <code>display /x i </code></p></li><li><p>显示 display 打印的值： <code>info display</code></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">(gdb) info display </span></span>
<span class="line"><span style="color:#A6ACCD;">Auto-display expressions now in effect:</span></span>
<span class="line"><span style="color:#A6ACCD;">Num Enb Expression</span></span>
<span class="line"><span style="color:#A6ACCD;">1:   y  i</span></span>
<span class="line"><span style="color:#A6ACCD;">2:   y  /t j</span></span></code></pre></div></li><li><p>不显示 <code>disable display 1</code></p></li><li><p>显示 <code>enable display 1</code></p></li><li><p>删除 <code>delete display 1</code></p></li></ol></li><li><p>打印内存地址的内容 <code>x</code>, 调试库内容 <code>x /nfu &lt;address&gt;</code></p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>n</td><td>打印的数量</td></tr><tr><td>f</td><td>打印的格式（参考print）</td></tr><tr><td>u</td><td>一个单元占内存大小<br>b：一个字节Byte<br>h：半字（2字节）<br>w：一个字（4字节）<br>g：Gaint word（8字节）</td></tr></tbody></table><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">(gdb) print a </span></span>
<span class="line"><span style="color:#A6ACCD;">$24 = 0x3c025b50 &quot;I am MrTan&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">(gdb) print &amp;i</span></span>
<span class="line"><span style="color:#A6ACCD;">$25 = (uint8_t *) 0x3fc8c92c &lt;i&gt; &quot;\\024\\006&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">(gdb) print &amp;k</span></span>
<span class="line"><span style="color:#A6ACCD;">$26 = (uint8_t (*)[5]) 0x3fc8c930 &lt;k&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">(gdb)  x /10cb 0x3c025b50</span></span>
<span class="line"><span style="color:#A6ACCD;">0x3c025b50:     73 &#39;I&#39;  32 &#39; &#39;  97 &#39;a&#39;  109 &#39;m&#39; 32 &#39; &#39;  77 &#39;M&#39;  114 &#39;r&#39; 84 &#39;T&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">0x3c025b58:     97 &#39;a&#39;  110 &#39;n&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">(gdb) x /10sb 0x3c025b50</span></span>
<span class="line"><span style="color:#A6ACCD;">0x3c025b50:     &quot;I am MrTan&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">0x3c025b5b:     &quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">0x3c025b5c:     &quot;MrTan&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">0x3c025b62:     &quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">0x3c025b63:     &quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">0x3c025b64:     &quot;\\033[0;32mI (%lu) %s: customer.name = %s; customer.age = %d\\033[0m\\n&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">0x3c025ba2:     &quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">0x3c025ba3:     &quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">0x3c025ba4:     &quot;rv_int_num != 0 &amp;&amp; rv_int_num &lt; RV_INT_COUNT &amp;&amp; \\&quot;Invalid CPU interrupt number\\&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">0x3c025bf3:     &quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">(gdb) x /1db 0x3fc8c92c</span></span>
<span class="line"><span style="color:#A6ACCD;">0x3fc8c92c &lt;i&gt;: 20</span></span>
<span class="line"><span style="color:#A6ACCD;">(gdb) x /5db 0x3fc8c930</span></span>
<span class="line"><span style="color:#A6ACCD;">0x3fc8c930 &lt;k&gt;: 0       1       2       3       4</span></span></code></pre></div></li><li><p>设置</p><ol><li><p>是否打印地址 <code>set print address on</code> <code>set print address off</code></p></li><li><p>优化打印输出 <code>set print pretty on</code></p></li><li><p>设置地址的前景/背景颜色 <code>set style address forground green</code> <code>set style address background red</code></p></li><li><p>设置变量的值 <code>set variable i = 0</code> <code>set var j = 0</code></p></li><li><p>设置环境变量 <code>set $a = 0</code></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">(gdb) set $a = 0</span></span>
<span class="line"><span style="color:#A6ACCD;">(gdb) while($a &lt; 5)</span></span>
<span class="line"><span style="color:#A6ACCD;"> &gt;if(k[$a] == 3)</span></span>
<span class="line"><span style="color:#A6ACCD;">  &gt;printf &quot;$a = %d, find 3. \\n&quot;, $a</span></span>
<span class="line"><span style="color:#A6ACCD;">  &gt;end</span></span>
<span class="line"><span style="color:#A6ACCD;"> &gt;set $a = $a + 1</span></span>
<span class="line"><span style="color:#A6ACCD;"> &gt;end</span></span>
<span class="line"><span style="color:#A6ACCD;">$a = 3, find 3.</span></span></code></pre></div></li></ol></li><li><p>调试</p><ol><li>运行N行 <code>next</code> / <code>n</code>， 运行3步 <code>next 3</code>, 不加参数运行1步</li><li>进入函数 <code>step</code> / <code>s</code>， 跳回 <code>finish</code></li><li>运行到N行 <code>until</code>， 运行到 37行： <code>until 37</code></li></ol></li><li><p>终端UI界面: 打开<code>tui enable</code>, 关闭 <code>tui disable</code> ，上下左右箭头调整显示区间。</p><p><img src="`+c+`" alt="1"></p></li><li><p>不运行直接跳转 <code>jump 行号</code> ，忽略一部分代码， 重复执行代码，运行到分支代码</p></li><li><p>自定义命令 <code>define</code>, 查看定义的指令 <code>show user</code></p></li></ol><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">(gdb) define find_data_in_k_array</span></span>
<span class="line"><span style="color:#A6ACCD;">Redefine command &quot;find_data_in_k_array&quot;? (y or n) y</span></span>
<span class="line"><span style="color:#A6ACCD;">Type commands for definition of &quot;find_data_in_k_array&quot;.</span></span>
<span class="line"><span style="color:#A6ACCD;">End with a line saying just &quot;end&quot;.</span></span>
<span class="line"><span style="color:#A6ACCD;">&gt;if($argc == 1)</span></span>
<span class="line"><span style="color:#A6ACCD;"> &gt;set $a=0</span></span>
<span class="line"><span style="color:#A6ACCD;"> &gt;while($a &lt; 5)</span></span>
<span class="line"><span style="color:#A6ACCD;">  &gt;if(k[$a] == $arg0)</span></span>
<span class="line"><span style="color:#A6ACCD;">   &gt;print &quot;id = %d, fing %d.\\n&quot;, $a, $arg0</span></span>
<span class="line"><span style="color:#A6ACCD;">   &gt;end</span></span>
<span class="line"><span style="color:#A6ACCD;">  &gt;set $a = $a + 1</span></span>
<span class="line"><span style="color:#A6ACCD;">  &gt;end</span></span>
<span class="line"><span style="color:#A6ACCD;"> &gt;else </span></span>
<span class="line"><span style="color:#A6ACCD;"> &gt;print &quot;wrong input paramter!\\n&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"> &gt;end</span></span>
<span class="line"><span style="color:#A6ACCD;">&gt;end</span></span></code></pre></div>`,6),d=[i];function r(C,A,u,g,y,b){return n(),a("div",null,d)}const D=s(t,[["render",r]]);export{_ as __pageData,D as default};
